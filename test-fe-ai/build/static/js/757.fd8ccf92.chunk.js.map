{"version":3,"file":"static/js/757.fd8ccf92.chunk.js","mappings":"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","sources":["view/remediation-execution-records/execution-dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useFetch_GET from \"../../services/http/Get\";\nimport \"./execution-dashboard.css\";\n\nconst ExecutionHistory = () => {\n  const { isLoading, error, data: apiData, getData } = useFetch_GET();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    getData(\"/get_audit_data\");\n  }, []);\n  console.log(data);\n  useEffect(() => {\n    setData(apiData);\n    setFilteredData(apiData);\n  }, [apiData]);\n\n  const handleServiceFilterChange = (event) => {\n    const value = event.target.value;\n    setFilteredData(\n      value ? data.filter((item) => item.serviceName === value) : data\n    );\n  };\n\n  const handleStatusFilterChange = (event) => {\n    const value = event.target.value;\n    setFilteredData(\n      value ? data.filter((item) => item.status === value) : data\n    );\n  };\n  const calculateDuration = (start, end) => {\n    if (start == null || end == null) {\n      return \"N/A\";\n    } else {\n      const startDate = new Date(start);\n      const endDate = new Date(end);\n      const durationInMilliseconds = endDate - startDate;\n      const durationInMinutes = Math.floor(durationInMilliseconds / 60000);\n      return durationInMinutes;\n    }\n  };\n  return (\n    <div>\n      <div className=\"table-header\">\n        <div className=\"table-name-description\">\n          <h2 className=\"table-name\">Remediation Execution Records</h2>\n          <p className=\"execution-table-description\">\n            View the execution history of remediation actions.\n          </p>\n        </div>\n        <div className=\"filters\">\n          <select id=\"remediation-filter\" onChange={handleServiceFilterChange}>\n            <option value=\"\">Filter by Service Name</option>\n            <option value=\"apache2\">Apache2</option>\n            <option value=\"OneAgent\">OneAgent</option>\n            <option value=\"MySQL\">MySQL</option>\n          </select>\n          <select id=\"status-filter\" onChange={handleStatusFilterChange}>\n            <option value=\"\">Filter by Status</option>\n            <option value=\"CLOSED\">Closed</option>\n            <option value=\"IN_PROGRESS\">In Progress</option>\n            <option value=\"FAILED\">Failed</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"container\">\n        <table id=\"execution-table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DisplayID</th>\n              <th>Problem Title</th>\n              <th>Sub Problem Title</th>\n              <th>Impacted Entity</th>\n              <th>Problem Impact</th>\n              <th>Problem Severity</th>\n              <th>Status</th>\n              <th>Service Name</th>\n              <th>Problem Detected At</th>\n              <th>Problem End At</th>\n              <th>Downtime</th>\n              <th>Action Type</th>\n              <th>Comment</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData?.map((item) => (\n              <tr\n                key={item.ID}\n                style={{ cursor: \"pointer\" }}\n                onClick={() =>\n                  navigate(`/${item.pid}/${item.executedProblemId}`)\n                }\n              >\n                <td>{item.id}</td>\n                <td>{item.displayId}</td>\n                <td>{item.problemTitle}</td>\n                <td>{item.subProblemTitle || \"N/A\"}</td>\n                <td>{item.impactedEntity}</td>\n                <td>{item.problemImpact}</td>\n                <td>{item.problemSeverity}</td>\n                <td>{item.status}</td>\n                <td>{item.serviceName}</td>\n                <td>{item.problemDetectedAt}</td>\n                <td>{item?.problemEndAt || \"N/A\"}</td>\n                <td>\n                  {calculateDuration(\n                    item?.problemDetectedAt,\n                    item?.problemEndAt\n                  )}{\" \"}\n                  min\n                </td>\n                <td>{item.actionType.toUpperCase()}</td>\n                <td>{item.comments}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ExecutionHistory;\n"],"names":["ExecutionHistory","isLoading","error","data","apiData","getData","useFetch_GET","setData","useState","filteredData","setFilteredData","navigate","useNavigate","useEffect","console","log","calculateDuration","start","end","startDate","Date","durationInMilliseconds","Math","floor","_jsxs","children","className","_jsx","id","onChange","event","value","target","filter","item","serviceName","status","map","style","cursor","onClick","concat","pid","executedProblemId","displayId","problemTitle","subProblemTitle","impactedEntity","problemImpact","problemSeverity","problemDetectedAt","problemEndAt","actionType","toUpperCase","comments","ID"],"sourceRoot":""}