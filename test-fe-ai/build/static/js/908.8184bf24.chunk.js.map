{"version":3,"file":"static/js/908.8184bf24.chunk.js","mappings":"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","sources":["services/http/Delete.js","components/modal/RemediationConfirmation.js","view/remediation-table/RemediationTable.js"],"sourcesContent":["import { useState } from \"react\";\nimport api from \"../Api\";\nimport { useDispatch } from \"react-redux\";\nimport { clearAlert, setAlert } from \"../../app/features/alert/alert\";\n\nconst useFetch_DELETE = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const dispatch = useDispatch();\n\n  const deleteData = async (url) => {\n    setIsLoading(true);\n    try {\n      const response = await api.delete(url);\n      setData(response);\n      dispatch(\n        setAlert({\n          alert: response.data,\n          variant: \"success\",\n          open: true,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        setAlert({\n          alert: error?.message || \"error\",\n          variant: \"info\",\n          open: true,\n        })\n      );\n    } finally {\n      setIsLoading(false);\n      setTimeout(() => {\n        // dispatch(setAlert({ status: null, open: false }));\n      }, 3000);\n    }\n  };\n\n  return { isLoading, error, data, deleteData };\n};\n\nexport default useFetch_DELETE;\n","import { Card } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\nimport useFetch_DELETE from \"../../services/http/Delete\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst RemediationConfirmation = ({\n  open,\n  problemId,\n  remediationId,\n  handleOpen,\n}) => {\n  const { isLoading, error, data, deleteData } = useFetch_DELETE();\n  const handleDelete = () => {\n    deleteData(`/delete_remediation/${remediationId}/${problemId}`);\n  };\n  if (data?.status == 200) {\n    handleOpen(false);\n  }\n  return (\n    <div>\n      <Modal\n        open={open}\n        // onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Confirm Your Request!\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            This action cannot be undone. Are you sure you want to delete?\n          </Typography>\n          <br />\n          <Box sx={{ display: \"flex\", justifyContent: \"space-between\", mt: 2 }}>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                handleDelete();\n              }}\n              sx={{ mr: 2 }}\n            >\n              {isLoading ? \"Loading...\" : \"Delete\"}\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleOpen(false);\n              }}\n            >\n              Cancel\n            </Button>\n          </Box>{\" \"}\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default RemediationConfirmation;\n","import DeleteIcon from \"@mui/icons-material/Delete\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport RemediationConfirmation from \"../../components/modal/RemediationConfirmation\";\nimport useFetch_GET from \"../../services/http/Get\";\nimport \"./RemediationTable.css\";\n\nconst RemediationTable = () => {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [deleteObj, setDeleteObj] = useState({});\n  const [filteredData, setFilteredData] = useState([]);\n  const navigate = useNavigate();\n  const { isLoading, error, data: apiData, getData } = useFetch_GET();\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n  useEffect(() => {\n    getData(\"/problems_with_remediations\");\n  }, [open]);\n  useEffect(() => {\n    setData(apiData);\n    setFilteredData(apiData);\n  }, [apiData]);\n\n  const handleServiceFilterChange = (event) => {\n    const value = event.target.value;\n    setFilteredData(\n      value ? data.filter((item) => item.ServiceName === value) : data\n    );\n  };\n\n  return (\n    <div>\n      {open && (\n        <RemediationConfirmation\n          handleOpen={handleOpen}\n          open={true}\n          problemId={deleteObj?.problemId}\n          remediationId={deleteObj?.remediationId}\n        />\n      )}\n      <div className=\"table-header\">\n        <div>\n          <h2 className=\"table-name\">Remediation Records</h2>\n          <p className=\"remediation-table-description\">\n            View the details of remediation actions.\n          </p>\n        </div>\n        {/* <div className=\"filters\">\n          <select\n            id=\"remediation-filter\"\n            onchange=\"handleServiceFilterChange()\"\n          >\n            <option value=\"\">Filter by Service Name</option>\n          </select>\n          <select id=\"status-filter\" onchange={handleStatusFilterChange()}>\n            <option value=\"\">Filter by Problem</option>\n            <option value=\"Process unavailable\">Process unavailable</option>\n          </select>\n        </div> */}\n      </div>\n      <div className=\"container\">\n        <table id=\"execution-table\">\n          <thead>\n            <tr>\n              <th>ProblemId</th>\n              <th>Problem Title</th>\n              <th>Sub-problem</th>\n              <th>Resolution Script</th>\n              <th>Recommendation</th>\n              <th>Create Date</th>\n              <th>Last Update</th>\n              <th>Owner</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData?.map((item) => (\n              <tr key={item.id}>\n                <td>{item.problemId}</td>\n                <td>{item.problemTitle}</td>\n                <td>{item.subProblemTitle || \"N/A\"}</td>\n                <td>{item.scriptPath}</td>\n                <td>{item.recommendationText}</td>\n                <td>{item.createdAt}</td>\n                <td>{item.lastUpdateAt}</td>\n                <td>{item.Owner} John</td>\n                <td>\n                  <button\n                    className=\"edit-button\"\n                    onClick={() => {\n                      navigate(\n                        `/recommendation/${item.remediationId}/${item.problemId}`\n                      );\n                    }}\n                  >\n                    <FaEdit />\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"edit-button\"\n                    onClick={() => {\n                      setOpen(true);\n                      setDeleteObj({\n                        problemId: item?.problemId,\n                        remediationId: item.remediationId,\n                      });\n                    }}\n                  >\n                    <DeleteIcon />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default RemediationTable;\n"],"names":["useFetch_DELETE","isLoading","setIsLoading","useState","error","setError","data","setData","dispatch","useDispatch","deleteData","async","response","api","delete","url","setAlert","alert","variant","open","message","setTimeout","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","_ref","problemId","remediationId","handleOpen","status","_jsx","children","Modal","_jsxs","Box","sx","Typography","id","component","mt","display","justifyContent","Button","onClick","concat","mr","RemediationTable","setOpen","deleteObj","setDeleteObj","filteredData","setFilteredData","navigate","useNavigate","apiData","getData","useFetch_GET","useEffect","RemediationConfirmation","className","map","item","problemTitle","subProblemTitle","scriptPath","recommendationText","createdAt","lastUpdateAt","Owner","FaEdit","DeleteIcon"],"sourceRoot":""}