{"version":3,"file":"static/js/567.c786afcc.chunk.js","mappings":"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","sources":["components/date-range/DateRange.js","pages/remediation-hompage/HomePage.js"],"sourcesContent":["\r\nimport { useState } from 'react';\r\n\r\n\r\nconst DateRange = ({range}) => {\r\n  const [selectedRange, setSelectedRange] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setSelectedRange(e.target.value);\r\n    range(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      id=\"date-range\"\r\n      value={selectedRange}\r\n      onChange={handleChange}\r\n      className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px] focus:outline-none block p-1\"\r\n    >\r\n      <option disabled value=\"\">\r\n        Select Date Range\r\n      </option>\r\n      {['last 30 min', 'last 1 hour', 'last 6 hours', 'last 24 hours', 'All Problems'].map((item, index) => (\r\n        <option key={index} value={item}>\r\n          {item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default DateRange;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useFetch_GET from \"../../services/http/Get\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { setNewRemediation } from \"../../app/features/modals_view/modal\";\r\nimport { setProblem } from \"../../app/features/problem/ProblemSlice\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport moment from \"moment-timezone\";\r\nimport { BsArrowUpRightSquareFill } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\n\r\nimport { Line, Radar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  RadialLinearScale, // Add this line\r\n} from \"chart.js\";\r\nimport DateRange from \"../../components/date-range/DateRange\";\r\nimport { convertToIST } from \"../../util/helper-func/DateConverter\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  RadialLinearScale // Add this line\r\n);\r\n\r\n// import \"./HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const { isLoading, error, data, getData } = useFetch_GET();\r\n\r\n  const [onholdStageMetrics, setOnholdStageMetrics] = useState();\r\n  const [onholdStageMetricsView, setOnholdStageMetricsView] = useState();\r\n\r\n  const [implementationStageMetrics, setImplementationStageMetrics] =\r\n    useState();\r\n  const [implementationStageMetricsView, setImplementationStageMetricsView] =\r\n    useState();\r\n\r\n  const [viewMetric, setViewMetric] = useState({ type: \"\", view: false });\r\n  const [dateRange, setDateRange] = useState();\r\n  const {\r\n    isLoading: isLoadingActiveProblems,\r\n    error: errorActiveProblems,\r\n    data: dataActiveProblems,\r\n    getData: getDataActiveProblems,\r\n  } = useFetch_GET();\r\n\r\n  const [recent, setRecent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setRecent((prev) => data?.activity);\r\n    }\r\n  }, [data]);\r\n\r\n  const {\r\n    isLoading: ptIsLoading,\r\n    error: ptError,\r\n    data: ptData,\r\n    getData: ptGetData,\r\n  } = useFetch_GET();\r\n\r\n  const [isHighlightChecked, setIsHighlightChecked] = useState(false);\r\n\r\n  const handleHighlightChange = () => {\r\n    setIsHighlightChecked((prev) => !prev);\r\n  };\r\n\r\n  const navigateTo = (url) => {\r\n    navigate(url);\r\n  };\r\n\r\n  // const getPID = (serviceName) => {\r\n  //   if (data) {\r\n  //     const find = data?.activity?.find(\r\n  //       (item) => item.serviceName == serviceName\r\n  //     );\r\n  //     return find.pid;\r\n  //   }\r\n  // };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getDataActiveProblems(\"/get_new_problems\");\r\n    getData(\"/audit-status\");\r\n    ptGetData(\"/problem-list\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchDataMetrics = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://zxd97598.live.dynatrace.com/api/v2/metrics/query?metricSelector=log.OnholdStageMetric&resolution=10m&from=now-1d&to=now&entitySelector: type(\"HOST\")`,\r\n          {\r\n            params: {\r\n              \"Api-Token\":\r\n                \"dt0c01.POCZ4VADXFFGNIJD675DREU7.IPHH2YGQ346FC6K6YTMPOMIJN2MC7C2MSUJXWVZRJ5IEDIVRMSX2FIFP77G6XO6C\",\r\n            },\r\n          }\r\n        );\r\n\r\n        const Stuck_Order_Onhold_Stage = response?.data?.result[0]?.data[0];\r\n        console.log(Stuck_Order_Onhold_Stage, \"Metrics data\");\r\n        setOnholdStageMetrics((prev) => ({\r\n          label: Stuck_Order_Onhold_Stage?.timestamps,\r\n          data: Stuck_Order_Onhold_Stage?.values,\r\n        }));\r\n      } catch (error) {\r\n        // alert(error.message);\r\n        console.error(\"Error fetching data: \", error);\r\n      } finally {\r\n      }\r\n    };\r\n    const fetchDataMetrics2 = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://zxd97598.live.dynatrace.com/api/v2/metrics/query?metricSelector=log.ImplementationStageMetric&resolution=10m&from=now-1d&to=now&entitySelector:`,\r\n          {\r\n            params: {\r\n              \"Api-Token\":\r\n                \"dt0c01.POCZ4VADXFFGNIJD675DREU7.IPHH2YGQ346FC6K6YTMPOMIJN2MC7C2MSUJXWVZRJ5IEDIVRMSX2FIFP77G6XO6C\",\r\n            },\r\n          }\r\n        );\r\n        console.log(response?.data, \"Metrics data 2\");\r\n        const Stuck_Order_Implementation_Stage =\r\n          response?.data?.result[0]?.data[0];\r\n\r\n        setImplementationStageMetrics((prev) => ({\r\n          label: Stuck_Order_Implementation_Stage?.timestamps,\r\n          data: Stuck_Order_Implementation_Stage?.values,\r\n        }));\r\n      } catch (error) {\r\n        // alert(error.message);\r\n        console.error(\"Error fetching data: \", error);\r\n      } finally {\r\n      }\r\n    };\r\n\r\n    fetchDataMetrics();\r\n    fetchDataMetrics2();\r\n  }, [viewMetric]);\r\n\r\n  const replaceNullWithZero = (arr) => {\r\n    return arr?.map((item) => (item === null ? 0 : item));\r\n  };\r\n\r\n  const convertTimestamps = (arr) => {\r\n    return arr?.map((timestamp) => {\r\n      const date = new Date(timestamp);\r\n      const day = date.getUTCDate();\r\n      const month = date.toLocaleString(\"default\", { month: \"short\" });\r\n      const hours = date.getUTCHours();\r\n      const period = hours >= 12 ? \"pm\" : \"am\";\r\n      const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\r\n      return `${day} ${month} ${formattedHours}${period}`;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onholdStageMetrics) {\r\n      const lebOnholdStageMetrics = convertTimestamps(\r\n        onholdStageMetrics?.label\r\n      );\r\n      const dataOnholdStageMetrics = replaceNullWithZero(\r\n        onholdStageMetrics?.data\r\n      );\r\n\r\n      setOnholdStageMetricsView((prev) => ({\r\n        labels: lebOnholdStageMetrics,\r\n        datasets: [\r\n          {\r\n            label: \"Idle\",\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192,0.4)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgba(75,192,192,1)\",\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: dataOnholdStageMetrics,\r\n          },\r\n        ],\r\n      }));\r\n    }\r\n  }, [onholdStageMetrics]);\r\n\r\n  useEffect(() => {\r\n    if (implementationStageMetrics) {\r\n      const lebOnholdStageMetrics = convertTimestamps(\r\n        implementationStageMetrics?.label\r\n      );\r\n      const dataOnholdStageMetrics = replaceNullWithZero(\r\n        implementationStageMetrics?.data\r\n      );\r\n\r\n      setImplementationStageMetricsView((prev) => ({\r\n        labels: lebOnholdStageMetrics,\r\n        datasets: [\r\n          {\r\n            label: \"Idle\",\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192,0.4)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgba(75,192,192,1)\",\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: dataOnholdStageMetrics,\r\n          },\r\n        ],\r\n      }));\r\n    }\r\n  }, [implementationStageMetrics]);\r\n\r\n  // useEffect(()=>{\r\n  //   setInterval(()=>{\r\n  //     getDataActiveProblems(\"/get_new_problems\");\r\n\r\n  //   }, 5000)\r\n  // },[])\r\n\r\n  useEffect(() => {\r\n    if (ptData) console.log(ptData, \"title\");\r\n  }, [ptData]);\r\n\r\n  const manage = [\r\n    {\r\n      id: 2,\r\n      path: \"/recommendation\",\r\n      title: \"Manage Self-healing Rules\",\r\n      des: \"View and manage rules\",\r\n      icon: \"fa fa-pencil\",\r\n    },\r\n    {\r\n      id: 3,\r\n      path: \"/new-problem\",\r\n      title: \"Root Cause Troubleshoot\",\r\n      des: \"View New Problems\",\r\n      icon: \"fa fa-exclamation-circle\",\r\n    },\r\n    {\r\n      id: 4,\r\n      path: \"/audit\",\r\n      title: \"Remediation Audit Records\",\r\n      des: \"View all remediations history\",\r\n      icon: \"fa fa-table\",\r\n    },\r\n  ];\r\n\r\n  const setSelectedProblem = (title, serviceName, id) => {\r\n    navigate(\"/new-problem\");\r\n    dispatch(\r\n      setProblem({\r\n        problemTitle: title,\r\n        subProblemTitle: serviceName,\r\n        problemId: id,\r\n        serviceName: serviceName,\r\n      })\r\n    );\r\n  };\r\n\r\n  const [selectedStatus, setSelectedStatus] = useState(\"\");\r\n  const [selectedTitle, setSelectedTitle] = useState(\"\");\r\n  const [selectedActionType, setSelectedActionType] = useState(\"\");\r\n  const [filter, setFilter] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedStatus(event.target.value);\r\n    console.log(event.target.value, \"status\");\r\n    // setFilter(prev => [...prev, event.target.value])\r\n  };\r\n  const handleChangeTitle = (event) => {\r\n    setSelectedTitle(event.target.value);\r\n    console.log(event.target.value, \"status\");\r\n    // setFilter(prev => [...prev, event.target.value])\r\n  };\r\n  const handleChangeActionType = (event) => {\r\n    setSelectedActionType(event.target.value);\r\n    console.log(event.target.value, \"status\");\r\n    // setFilter(prev => [...prev, event.target.value])\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if(selectedStatus !== ''){\r\n    //  const fil = data?.activity?.filter((item) => item.status == selectedStatus);\r\n    //  setRecent(prev => fil);\r\n    // }\r\n\r\n    const filteredData = data?.activity?.filter((item) => {\r\n      return (\r\n        (selectedStatus === \"\" || item.status === selectedStatus) &&\r\n        (selectedTitle === \"\" || item.problemTitle.includes(selectedTitle)) &&\r\n        (selectedActionType === \"\" || item.actionType === selectedActionType)\r\n      );\r\n    });\r\n    console.log(dateRange);\r\n    if (dateRange) {\r\n      console.log(new Date(dateRange), \"range\");\r\n      console.log(new Date(), \"now\");\r\n      const now = new Date();\r\n      const fitterDataWithDateRange = filteredData?.filter((item) => {\r\n        console.log(convertToIST(item?.problemDetectedAt), \"time\");\r\n        const detectedTime = convertToIST(item?.problemDetectedAt);\r\n\r\n        return new Date(dateRange) <= detectedTime;\r\n      });\r\n      setRecent((prev) => fitterDataWithDateRange);\r\n    } else {\r\n      setRecent((prev) => filteredData);\r\n    }\r\n  }, [selectedStatus, selectedTitle, selectedActionType, dateRange]);\r\n\r\n  const getFormattedTime = (range) => {\r\n    const now = new Date();\r\n    let pastDate;\r\n\r\n    switch (range) {\r\n      case \"last 30 min\":\r\n        pastDate = new Date(now.getTime() - 30 * 60 * 1000); // 30 minutes\r\n        break;\r\n      case \"last 1 hour\":\r\n        pastDate = new Date(now.getTime() - 60 * 60 * 1000); // 1 hour\r\n        break;\r\n      case \"last 6 hours\":\r\n        pastDate = new Date(now.getTime() - 6 * 60 * 60 * 1000); // 6 hours\r\n        break;\r\n      case \"last 24 hours\":\r\n        pastDate = new Date(now.getTime() - 24 * 60 * 60 * 1000); // 24 hours\r\n        break;\r\n      default:\r\n        setDateRange((prev) => null);\r\n        return null;\r\n    }\r\n\r\n    // Return Unix timestamp (in seconds, not milliseconds)\r\n    const unixTimestamp = Math.floor(pastDate.getTime());\r\n    setDateRange((prev) => unixTimestamp);\r\n\r\n    // return unixTimestamp;\r\n  };\r\n\r\n  function formatDateToCustomFormat(dateString) {\r\n    if (!dateString) return \"\";\r\n\r\n    // Parse the date with moment, assume it's in UTC\r\n    const dateInUTC = moment.utc(dateString);\r\n\r\n    // Convert to IST and format\r\n    return dateInUTC.format(\"YYYY:MM:DD-HH:mm:ss\");\r\n  }\r\n\r\n  return (\r\n    <div className=\" p-5 flex flex-col gap-2 justify-between h-body \">\r\n      <div className=\"flex flex-col gap-2 md:flex-row justify-between\">\r\n        <div className=\"w-full md:w-[635px] flex flex-col gap-2\">\r\n          <div className=\" p-2 shadow-sm shadow-slate-400 bg-white flex flex-col md:grid md:grid-cols-2 gap-2\">\r\n            <div className=\"col-span-2\">\r\n              <h3 className=\"text-sm font-semibold\">Quick Actions</h3>\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                dispatch(setNewRemediation(true));\r\n              }}\r\n              className=\" bg-slate-200 cursor-pointer flex gap-2 rounded-md  p-2 shadow-sm shadow-slate-400  hover:bg-slate-300\"\r\n            >\r\n              <div className=\"my-auto\">\r\n                <i className={` fa fa-plus-square p-2`} aria-hidden=\"true\"></i>\r\n              </div>\r\n              <div className=\"text-start my-auto\">\r\n                <p className=\"text-md\">Create Self-healing Rule</p>\r\n                <p className=\"text-xs\">Define rules to identify problems</p>\r\n              </div>\r\n            </div>\r\n            {manage?.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                onClick={() => {\r\n                  navigateTo(item?.path);\r\n                }}\r\n                className=\"flex gap-2 rounded-md cursor-pointer  bg-slate-200 p-2 shadow-sm shadow-slate-400  hover:bg-slate-300\"\r\n              >\r\n                <div className=\"my-auto\">\r\n                  <i className={` ${item?.icon} p-2`} aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\" text-start my-auto\">\r\n                  <p className=\"text-sm\">{item?.title}</p>\r\n                  <p className=\"text-xs\">{item?.des}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\" p-2 shadow-sm h-[100px] shadow-slate-400 bg-white flex flex-col\">\r\n            <div className=\"mb-2\">\r\n              <h3 className=\"text-sm font-semibold\">Metrics</h3>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <div\r\n                onClick={() => {\r\n                  setViewMetric((prev) => ({ type: \"onHold\", view: true }));\r\n                }}\r\n                className=\" bg-slate-50 p-2 rounded-sm shadow-sm shadow-slate-400 flex justify-center cursor-pointer hover:bg-slate-100\"\r\n              >\r\n                <p>Onhold Stage Metrics</p>\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  setViewMetric((prev) => ({\r\n                    type: \"implementation\",\r\n                    view: true,\r\n                  }));\r\n                }}\r\n                className=\" bg-slate-50 p-2 rounded-sm shadow-sm shadow-slate-400 flex justify-center cursor-pointer hover:bg-slate-100\"\r\n              >\r\n                <p>Implementation Stage Metrics</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white cursor-pointer p-5 h-[calc(100vh-380px)] shadow-sm shadow-slate-400\">\r\n            <div className=\"flex flex-col gap-2\">\r\n              <div className=\"flex gap-2\">\r\n                <div className=\"w-[33%]\">\r\n                  <h3 className=\"text-sm font-semibold\">Open Problems</h3>\r\n                </div>\r\n                <div className=\"w-[33%]\">\r\n                  <h3 className=\"text-sm font-semibold\">Inprogress Problems</h3>\r\n                </div>\r\n                <div className=\"w-[33%]\">\r\n                  <h3 className=\"text-sm font-semibold\">Remediated Problems</h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex gap-2 w-full\">\r\n                <div\r\n                  onClick={() => {\r\n                    navigateTo(\"/audit/open\");\r\n                  }}\r\n                  className=\"flex justify-center bg-red-50 max-h-10 w-[33%]\"\r\n                >\r\n                  <p className=\"font-bold m-auto text-2xl p-1\">\r\n                    {data?.opencount || 0}\r\n                  </p>\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    navigateTo(\"/audit/in-progress\");\r\n                  }}\r\n                  className=\"flex justify-center bg-yellow-50 max-h-10 w-[33%]\"\r\n                >\r\n                  <p className=\"font-bold m-auto text-2xl p-1\">\r\n                    {data?.InProgressCount || 0}\r\n                  </p>\r\n                </div>\r\n                <div\r\n                  className=\"flex justify-center bg-green-50 max-h-10 w-[33%]\"\r\n                  onClick={() => {\r\n                    navigateTo(\"/audit/closed\");\r\n                  }}\r\n                >\r\n                  <p className=\"font-bold m-auto text-2xl p-1\">\r\n                    {data?.closedCount || 0}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"pt-5\">\r\n              <h3 className=\"text-sm font-bold\">New Problems</h3>\r\n            </div>\r\n            {/* <div className=\"py-2 h-[calc(100vh-400px)] overflow-auto\">\r\n              <table className=\"w-full\">\r\n                <thead>\r\n                  <tr className=\"bg-slate-200 text-sm\">\r\n                    <th className=\"p-2\">id</th>\r\n                    <th>title</th>\r\n                    <th>service</th>\r\n                    <th>sevirity level</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataActiveProblems?.map((incident, index) => (\r\n                    <tr\r\n                     \r\n                      key={index}\r\n                      onClick={() =>\r\n                        setSelectedProblem(\r\n                          incident?.problemTitle,\r\n                          incident?.serviceName,\r\n                          incident.id\r\n                        )\r\n                      }\r\n                      className=\"bg-white cursor-pointer hover:bg-slate-50 text-xs border-b border-gray-300\"\r\n                    >\r\n                      <td className=\"p-2\">{incident?.id}</td>\r\n                      <td>{incident?.problemTitle}</td>\r\n                      <td>{incident?.serviceName}</td>\r\n                      <td>\r\n                        {incident?.serviceName == \"apache2\" ? (\r\n                          <div className=\"flex\">\r\n                            <p className=\" m-auto text-center w-12 bg-red-400 p-1 text-xs rounded-full text-white\">\r\n                              High\r\n                            </p>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"flex\">\r\n                            <p className=\" m-auto  text-center w-12 bg-amber-600 p-1 text-xs rounded-full text-white\">\r\n                              Low\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <BsArrowUpRightSquareFill className=\"text-lg\" />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div> */}\r\n            <div className=\"py-2 overflow-auto h-[calc(100vh-400px)]\">\r\n              <table className=\"w-full hidden md:table\">\r\n                <thead>\r\n                  <tr className=\"bg-slate-200 text-sm\">\r\n                    <th className=\"p-2\">ID</th>\r\n                    <th>Title</th>\r\n                    <th>Service</th>\r\n                    <th>Severity Level</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataActiveProblems?.map((incident, index) => (\r\n                    <tr\r\n                      key={index}\r\n                      onClick={() =>\r\n                        setSelectedProblem(\r\n                          incident?.problemTitle,\r\n                          incident?.serviceName,\r\n                          incident.id\r\n                        )\r\n                      }\r\n                      className=\"bg-white cursor-pointer hover:bg-slate-50 text-xs border-b border-gray-300\"\r\n                    >\r\n                      <td className=\"p-2\">{incident?.id}</td>\r\n                      <td>{incident?.problemTitle}</td>\r\n                      <td>{incident?.serviceName}</td>\r\n                      <td>\r\n                        <div className=\"flex\">\r\n                          <p\r\n                            className={`m-auto text-center w-12 p-1 text-xs rounded-full text-white ${\r\n                              incident?.serviceName === \"apache2\"\r\n                                ? \"bg-red-400\"\r\n                                : \"bg-amber-600\"\r\n                            }`}\r\n                          >\r\n                            {incident?.serviceName === \"apache2\"\r\n                              ? \"High\"\r\n                              : \"Low\"}\r\n                          </p>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <BsArrowUpRightSquareFill className=\"text-lg\" />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div className=\"md:hidden space-y-4\">\r\n                {dataActiveProblems?.map((incident, index) => (\r\n                  <div\r\n                    key={index}\r\n                    onClick={() =>\r\n                      setSelectedProblem(\r\n                        incident?.problemTitle,\r\n                        incident?.serviceName,\r\n                        incident.id\r\n                      )\r\n                    }\r\n                    className=\"bg-white p-4 rounded-lg shadow-md border cursor-pointer hover:bg-slate-50\"\r\n                  >\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        <p className=\"text-gray-600\">ID: {incident?.id}</p>\r\n                        <p className=\"text-gray-800\">\r\n                          {incident?.problemTitle}\r\n                        </p>\r\n                        <p className=\"text-gray-600\">\r\n                          Service: {incident?.serviceName}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"flex flex-col items-end\">\r\n                        <p\r\n                          className={`text-xs px-2 py-1 rounded-full text-white ${\r\n                            incident?.serviceName === \"apache2\"\r\n                              ? \"bg-red-400\"\r\n                              : \"bg-amber-600\"\r\n                          }`}\r\n                        >\r\n                          {incident?.serviceName === \"apache2\" ? \"High\" : \"Low\"}\r\n                        </p>\r\n                        <BsArrowUpRightSquareFill className=\"text-lg mt-2\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/*  */}\r\n        {/* <div className=\"w-full cursor-pointer md:w-[calc(100vw-660px)] h-[calc(100vh-102px)] min-h-[469px] p-5 bg-white shadow-sm shadow-slate-400\">\r\n          <div className=\"flex flex-col md:flex-row justify-between \">\r\n            <h3 className=\"text-sm text-start font-semibold\">\r\n              Recent Incidents\r\n            </h3>\r\n            <div className=\"flex flex-wrap justify-end gap-2\">\r\n              <div className=\"flex items-center gap-2 px-2 border h-[29px] bg-slate-50 border-gray-200\">\r\n                <input\r\n                  id=\"bordered-checkbox-1\"\r\n                  type=\"checkbox\"\r\n                  defaultValue={\"\"}\r\n                  checked={isHighlightChecked}\r\n                  onChange={handleHighlightChange}\r\n                  name=\"bordered-checkbox\"\r\n                  className=\" text-blue-600 bg-gray-100 border-gray-300\"\r\n                />\r\n                <label className=\"w-full text-gray-900\">\r\n                  <p className=\"text-xs p-0 m-0\">Highlight</p>\r\n                </label>\r\n              </div>\r\n              <select\r\n                id=\"problem-title\"\r\n                defaultValue={\"\"}\r\n                value={selectedTitle}\r\n                onChange={handleChangeTitle}\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px]  focus:outline-none  block  p-1\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Title\r\n                </option>\r\n                {ptData?.map((item, index) => (\r\n                  <option key={index} value={item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <select\r\n                id=\"problem-title\"\r\n                defaultValue={\"\"}\r\n                value={selectedActionType}\r\n                onChange={handleChangeActionType}\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px]  focus:outline-none  block  p-1\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Action Type\r\n                </option>\r\n                {[\"MANUAL\", \"AUTOMATIC\"].map((item, index) => (\r\n                  <option key={index} value={item}>\r\n                    {item.toUpperCase()}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <select\r\n                id=\"problem-title\"\r\n                defaultValue={\"\"}\r\n                value={selectedStatus}\r\n                onChange={handleChange}\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px]  focus:outline-none  block  p-1\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Status\r\n                </option>\r\n                {[\"OPEN\", \"CLOSED\", \"IN_PROGRESS\"].map((item, index) => (\r\n                  <option key={index} value={item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col gap-2\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none\">\r\n                <svg\r\n                  className=\"w-4 h-4 text-gray-500 dark:text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 20 20\"\r\n                >\r\n                  <path\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email-address-icon\"\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm block w-[60%] ps-10 p-1\"\r\n                placeholder=\"search problems by service name\"\r\n              />\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              {selectedStatus !== \"\" && (\r\n                <div\r\n                  onClick={() => setSelectedStatus(\"\")}\r\n                  className=\"flex  text-xs items-center gap-2 px-2 border h-[29px] bg-slate-50 border-gray-200\"\r\n                >\r\n                  {selectedStatus} <IoMdClose />\r\n                </div>\r\n              )}\r\n              {selectedActionType !== \"\" && (\r\n                <div\r\n                  onClick={() => setSelectedActionType(\"\")}\r\n                  className=\"flex  text-xs items-center gap-2 px-2 border h-[29px] bg-slate-50 border-gray-200\"\r\n                >\r\n                  {selectedActionType} <IoMdClose />\r\n                </div>\r\n              )}\r\n              {selectedTitle !== \"\" && (\r\n                <div\r\n                  onClick={() => setSelectedTitle(\"\")}\r\n                  className=\"flex  text-xs items-center gap-2 px-2 border h-[29px] bg-slate-50 border-gray-200\"\r\n                >\r\n                  {selectedTitle} <IoMdClose />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"py-2\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"bg-slate-200 text-sm\">\r\n                  <th className=\"p-2\">id</th>\r\n                  <th>title</th>\r\n                  <th>service</th>\r\n                  <th>status</th>\r\n                  <th>action</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {recent?.map((incident, index) => (\r\n                  <tr\r\n                    key={index}\r\n                    onClick={() => {\r\n                      navigateTo(\r\n                        `/${incident?.pid}/${incident?.executedProblemId}`\r\n                      );\r\n                    }}\r\n                    className={`${\r\n                      incident?.status == \"OPEN\" &&\r\n                      isHighlightChecked &&\r\n                      \"bg-red-50\"\r\n                    } ${\r\n                      incident?.status == \"CLOSED\" &&\r\n                      isHighlightChecked &&\r\n                      \"bg-green-50\"\r\n                    } ${\r\n                      incident?.status == \"IN_PROGRESS\" &&\r\n                      isHighlightChecked &&\r\n                      \"bg-orange-50\"\r\n                    } hover:bg-slate-50 text-xs border-b border-gray-300`}\r\n                  >\r\n                    <td className=\"p-2\">{incident?.id}</td>\r\n                    <td>{incident?.problemTitle}</td>\r\n                    <td>{incident?.serviceName}</td>\r\n                    <td>{incident?.status}</td>\r\n                    <td>{incident?.actionType}</td>\r\n                    <td>\r\n                      <BsArrowUpRightSquareFill className=\"text-lg\" />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"w-full cursor-pointer md:w-[calc(100vw-660px)] h-[calc(100vh-102px)] min-h-[469px] p-5 bg-white shadow-sm shadow-slate-400\">\r\n          <div className=\"flex flex-col md:flex-row justify-between \">\r\n            <h3 className=\"text-sm text-start font-semibold\">\r\n              Recent Incidents\r\n            </h3>\r\n            <div className=\"flex flex-wrap justify-end gap-2\">\r\n              <div className=\"flex items-center gap-2 px-2 border h-[29px] bg-slate-50 border-gray-200\">\r\n                <input\r\n                  id=\"bordered-checkbox-1\"\r\n                  type=\"checkbox\"\r\n                  checked={isHighlightChecked}\r\n                  onChange={handleHighlightChange}\r\n                  name=\"bordered-checkbox\"\r\n                  className=\"text-blue-600 bg-gray-100 border-gray-300\"\r\n                />\r\n                <label className=\"w-full text-gray-900\">\r\n                  <p className=\"text-xs p-0 m-0\">Highlight</p>\r\n                </label>\r\n              </div>\r\n              <select\r\n                id=\"problem-title\"\r\n                value={selectedTitle}\r\n                onChange={handleChangeTitle}\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px] focus:outline-none block p-1\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Title\r\n                </option>\r\n                {ptData?.map((item, index) => (\r\n                  <option key={index} value={item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <select\r\n                id=\"problem-title\"\r\n                value={selectedActionType}\r\n                onChange={handleChangeActionType}\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px] focus:outline-none block p-1\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Action Type\r\n                </option>\r\n                {[\"MANUAL\", \"AUTOMATIC\"].map((item, index) => (\r\n                  <option key={index} value={item}>\r\n                    {item.toUpperCase()}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <select\r\n                id=\"problem-title\"\r\n                value={selectedStatus}\r\n                onChange={handleChange}\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px] focus:outline-none block p-1\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Status\r\n                </option>\r\n                {[\"OPEN\", \"CLOSED\", \"IN_PROGRESS\"].map((item, index) => (\r\n                  <option key={index} value={item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col gap-2\">\r\n            <div className=\"relative\">\r\n              <div className=\" absolute right-0\">\r\n                <DateRange\r\n                  range={(date) => {\r\n                    getFormattedTime(date);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center pl-3.5 pointer-events-none\">\r\n                <svg\r\n                  className=\"w-4 h-4 text-gray-500 dark:text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 20 20\"\r\n                >\r\n                  <path\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email-address-icon\"\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm block w-[60%] pl-10 p-1\"\r\n                placeholder=\"search problems by service name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex gap-2 flex-wrap\">\r\n              {selectedStatus && (\r\n                <div\r\n                  onClick={() => setSelectedStatus(\"\")}\r\n                  className=\"flex text-xs items-center gap-2 px-2 border h-[29px] bg-slate-50 border-gray-200\"\r\n                >\r\n                  {selectedStatus} <IoMdClose />\r\n                </div>\r\n              )}\r\n              {selectedActionType && (\r\n                <div\r\n                  onClick={() => setSelectedActionType(\"\")}\r\n                  className=\"flex text-xs items-center gap-2 px-2 border h-[29px] bg-slate-50 border-gray-200\"\r\n                >\r\n                  {selectedActionType} <IoMdClose />\r\n                </div>\r\n              )}\r\n              {selectedTitle && (\r\n                <div\r\n                  onClick={() => setSelectedTitle(\"\")}\r\n                  className=\"flex text-xs items-center gap-2 px-2 border h-[29px] bg-slate-50 border-gray-200\"\r\n                >\r\n                  {selectedTitle} <IoMdClose />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"py-2 h-[calc(100vh-320px)] md:h-[calc(100vh-220px)] overflow-auto\">\r\n            <table className=\"w-full  hidden md:table\">\r\n              <thead>\r\n                <tr className=\"bg-slate-200 text-xs\">\r\n                  {/* <th className=\"p-2\">ID</th> */}\r\n                  <th className=\" text-start p-2 \">Alert Details</th>\r\n                  <th className=\" text-start p-2  max-w-44\">Service</th>\r\n                  <th className=\" text-start p-2\">Status</th>\r\n                  <th className=\" text-start p-2 \">Effort Saving</th>\r\n                  <th className=\" text-start p-2 \">Start Date</th>\r\n                  <th className=\" text-start p-2\">End Date</th>\r\n                  <th className=\" text-start p-2\"> Action</th>\r\n                  <th className=\" text-start p-2\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {recent?.map((incident, index) => (\r\n                  <tr\r\n                    key={index}\r\n                    onClick={() => {\r\n                      navigateTo(\r\n                        `/${incident?.pid}/${incident?.executedProblemId}/${incident?.id}`\r\n                      );\r\n                    }}\r\n                    className={`${\r\n                      incident?.status === \"OPEN\" &&\r\n                      isHighlightChecked &&\r\n                      \"bg-red-50\"\r\n                    } ${\r\n                      incident?.status === \"CLOSED\" &&\r\n                      isHighlightChecked &&\r\n                      \"bg-green-50\"\r\n                    } ${\r\n                      incident?.status === \"IN_PROGRESS\" &&\r\n                      isHighlightChecked &&\r\n                      \"bg-orange-50\"\r\n                    } hover:bg-slate-50 text-xs border-b border-gray-300`}\r\n                  >\r\n                    {/* <td className=\"p-2\">{incident?.id}</td> */}\r\n                    <td className=\" text-start p-2\">\r\n                      {incident?.problemTitle}\r\n                    </td>\r\n                    <td className=\" text-start p-2 max-w-44\">\r\n                      {incident?.serviceName}\r\n                    </td>\r\n                    <td className=\" text-start p-2\">{incident?.status}</td>\r\n                    <td className=\"p-2 text-start\">{incident?.efforTime || 25 } min</td>\r\n                    <td className=\" text-start p-2\">\r\n                      {formatDateToCustomFormat(incident?.problemDetectedAt)}\r\n                    </td>\r\n                    <td className=\" text-start p-2\">\r\n                      {formatDateToCustomFormat(incident?.problemEndAt)}\r\n                    </td>\r\n                    <td className=\" text-start p-2\">{incident?.actionType}</td>\r\n                    <td className=\" text-start p-2\">\r\n                      <BsArrowUpRightSquareFill className=\"text-lg\" />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <div className=\"md:hidden space-y-4 h-[calc(100vh-330px)] px-2\">\r\n              {recent?.map((incident, index) => (\r\n                <div\r\n                  key={index}\r\n                  onClick={() => {\r\n                    navigateTo(\r\n                      `/${incident?.pid}/${incident?.executedProblemId}/${incident?.id}`\r\n                    );\r\n                  }}\r\n                  className={`${\r\n                    incident?.status === \"OPEN\" &&\r\n                    isHighlightChecked &&\r\n                    \"bg-red-50\"\r\n                  } ${\r\n                    incident?.status === \"CLOSED\" &&\r\n                    isHighlightChecked &&\r\n                    \"bg-green-50\"\r\n                  } ${\r\n                    incident?.status === \"IN_PROGRESS\" &&\r\n                    isHighlightChecked &&\r\n                    \"bg-orange-50\"\r\n                  } hover:bg-slate-50 p-4 rounded-lg shadow-md border`}\r\n                >\r\n                  <div className=\"flex flex-col space-y-2\">\r\n                    <div className=\"text-sm font-medium space-y-1\">\r\n                      <p className=\"text-gray-600\">ID: {incident?.id}</p>\r\n                      <p className=\"text-gray-800 truncate\">\r\n                        {incident?.problemTitle}\r\n                      </p>\r\n                      <p className=\"text-gray-600 truncate max-w-[150px]\">\r\n                        Service: {incident?.serviceName}\r\n                      </p>\r\n\r\n                      <p className=\"text-gray-600\">\r\n                        Status: {incident?.status}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <p className=\"text-gray-600\">{incident?.actionType}</p>\r\n                      <BsArrowUpRightSquareFill className=\"text-lg\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/*  */}\r\n      </div>\r\n\r\n      {/*  */}\r\n\r\n      {viewMetric?.view && (\r\n        <div className=\"bg-blur flex h-lvh justify-center overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50  items-center w-full md:inset-0 p-2   max-h-full\">\r\n          <div className=\"m-auto  relative  w-full md:w-[80%]  max-h-full rounded-md overflow-hidden bg-white shadow-sm shadow-slate-400\">\r\n            <div className=\"flex justify-between p-4 border-b border-gray-300\">\r\n              <h3 className=\" text-lg font-bold\">\r\n                {viewMetric?.type == \"onHold\" && \"Stuck Order Onhold Stage\"}\r\n                {viewMetric?.type == \"implementation\" &&\r\n                  \"Stuck Order Implementation Stage Metrics\"}\r\n              </h3>\r\n              <button\r\n                onClick={() => {\r\n                  setViewMetric((prev) => ({ type: \"\", view: false }));\r\n                }}\r\n                type=\"button\"\r\n                className=\"end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\r\n              >\r\n                <svg\r\n                  class=\"w-3 h-3\"\r\n                  aria-hidden=\"true\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 14 14\"\r\n                >\r\n                  <path\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                  />\r\n                </svg>\r\n                <span class=\"sr-only\">Close modal</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"p-5\">\r\n              {onholdStageMetricsView && viewMetric?.type == \"onHold\" && (\r\n                <Line data={onholdStageMetricsView} />\r\n              )}\r\n              {implementationStageMetricsView &&\r\n                viewMetric?.type == \"implementation\" && (\r\n                  <Line data={implementationStageMetricsView} />\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/*  */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["_ref","range","selectedRange","setSelectedRange","useState","_jsxs","id","value","onChange","e","target","className","children","_jsx","disabled","map","item","index","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","RadialLinearScale","HomePage","navigate","useNavigate","isLoading","error","data","getData","useFetch_GET","onholdStageMetrics","setOnholdStageMetrics","onholdStageMetricsView","setOnholdStageMetricsView","implementationStageMetrics","setImplementationStageMetrics","implementationStageMetricsView","setImplementationStageMetricsView","viewMetric","setViewMetric","type","view","dateRange","setDateRange","isLoadingActiveProblems","errorActiveProblems","dataActiveProblems","getDataActiveProblems","recent","setRecent","useEffect","prev","activity","ptIsLoading","ptError","ptData","ptGetData","isHighlightChecked","setIsHighlightChecked","navigateTo","url","dispatch","useDispatch","async","_response$data","_response$data$result","response","axios","get","params","Stuck_Order_Onhold_Stage","result","console","log","label","timestamps","values","fetchDataMetrics","_response$data2","_response$data2$resul","Stuck_Order_Implementation_Stage","fetchDataMetrics2","replaceNullWithZero","arr","convertTimestamps","timestamp","date","Date","day","getUTCDate","month","toLocaleString","hours","getUTCHours","period","formattedHours","concat","lebOnholdStageMetrics","dataOnholdStageMetrics","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","manage","path","title","des","icon","setSelectedProblem","serviceName","setProblem","problemTitle","subProblemTitle","problemId","selectedStatus","setSelectedStatus","selectedTitle","setSelectedTitle","selectedActionType","setSelectedActionType","filter","setFilter","_data$activity","filteredData","status","includes","actionType","fitterDataWithDateRange","convertToIST","problemDetectedAt","detectedTime","formatDateToCustomFormat","dateString","moment","format","onClick","setNewRemediation","opencount","InProgressCount","closedCount","incident","BsArrowUpRightSquareFill","checked","handleHighlightChange","name","event","toUpperCase","DateRange","now","pastDate","getTime","unixTimestamp","Math","floor","getFormattedTime","xmlns","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","placeholder","IoMdClose","pid","executedProblemId","efforTime","problemEndAt","class","Line"],"sourceRoot":""}