{"version":3,"file":"static/js/265.3837d078.chunk.js","mappings":"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","sources":["components/date-range/DateRange.js","view/remediation-execution-records/execution-dashboard.js"],"sourcesContent":["\r\nimport { useState } from 'react';\r\n\r\n\r\nconst DateRange = ({range}) => {\r\n  const [selectedRange, setSelectedRange] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setSelectedRange(e.target.value);\r\n    range(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      id=\"date-range\"\r\n      value={selectedRange}\r\n      onChange={handleChange}\r\n      className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px] focus:outline-none block p-1\"\r\n    >\r\n      <option disabled value=\"\">\r\n        Select Date Range\r\n      </option>\r\n      {['last 30 min', 'last 1 hour', 'last 6 hours', 'last 24 hours', 'All Problems'].map((item, index) => (\r\n        <option key={index} value={item}>\r\n          {item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default DateRange;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport useFetch_GET from \"../../services/http/Get\";\r\nimport DateRange from \"../../components/date-range/DateRange\";\r\nimport { convertToIST } from \"../../util/helper-func/DateConverter\";\r\n\r\nconst ExecutionHistory = () => {\r\n\r\n  const { isLoading, error, data: apiData, getData } = useFetch_GET();\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState(\"\");\r\n  const [selectedService, setSelectedService] = useState(\"\");\r\n  const [dateRange, setDateRange] = useState();\r\n  const navigate = useNavigate();\r\n  const {id} = useParams();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getData(\"/get_audit_data\");\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setData(apiData);\r\n    if(id){\r\n      const filteredData = apiData?.filter((item) => {\r\n        if(id == 'closed') return ((item.status === 'CLOSED'));\r\n        if(id == 'open') return ((item.status === 'OPEN'));\r\n        if(id == 'in-progress') return ((item.status === 'IN_PROGRESS'));\r\n\r\n        \r\n      });\r\n      if(id == 'closed') setSelectedStatus(prev => 'CLOSED');\r\n      if(id == 'open') setSelectedStatus(prev => 'OPEN');\r\n      if(id == 'in-progress') setSelectedStatus(prev => 'IN_PROGRESS');\r\n\r\n      setFilteredData(filteredData);\r\n    }else{\r\n      setFilteredData(apiData);\r\n    }\r\n    \r\n  }, [apiData]);\r\n\r\n  const handleServiceFilterChange = (event) => {\r\n    const value = event.target.value;\r\n    setSelectedService((prev) => value);\r\n    // setFilteredData(\r\n    //   value ? data.filter((item) => item.serviceName === value) : data\r\n    // );\r\n  };\r\n\r\n  const handleStatusFilterChange = (event) => {\r\n    const value = event.target.value;\r\n    setSelectedStatus((prev) => value);\r\n    // setFilteredData(\r\n    //   value ? data.filter((item) => item.status === value) : data\r\n    // );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(selectedService);\r\n    // console.log(selectedStatus);\r\n    \r\n   if(data){\r\n    const filteredData = data?.filter((item) => {\r\n      return (\r\n        (selectedStatus === \"\" || item.status === selectedStatus) &&\r\n        (selectedService === \"\" || item.serviceNamem === selectedService) \r\n      );\r\n    });\r\n    // console.log(dateRange, 'date');\r\n     if(dateRange){\r\n      console.log(new Date(dateRange), 'range');\r\n      console.log(new Date(), 'now');\r\n      const now = new Date();\r\n      const fitterDataWithDateRange = filteredData?.filter(item => {\r\n        console.log(convertToIST(item?.problemDetectedAt), 'time');\r\n        const detectedTime = convertToIST(item?.problemDetectedAt);\r\n\r\n        return new Date(dateRange) <= detectedTime;\r\n\r\n      });\r\n      setFilteredData((prev) => fitterDataWithDateRange);\r\n\r\n     }else{\r\n     setFilteredData((prev) => filteredData);\r\n     }\r\n   }\r\n\r\n    \r\n  }, [selectedService, selectedStatus, dateRange, id]);\r\n\r\n  const getFormattedTime = (range) => {\r\n    const now = new Date();\r\n    let pastDate;\r\n  \r\n    switch (range) {\r\n      case \"last 30 min\":\r\n        pastDate = new Date(now.getTime() - 30 * 60 * 1000); // 30 minutes\r\n        break;\r\n      case \"last 1 hour\":\r\n        pastDate = new Date(now.getTime() - 60 * 60 * 1000); // 1 hour\r\n        break;\r\n      case \"last 6 hours\":\r\n        pastDate = new Date(now.getTime() - 6 * 60 * 60 * 1000); // 6 hours\r\n        break;\r\n      case \"last 24 hours\":\r\n        pastDate = new Date(now.getTime() - 24 * 60 * 60 * 1000); // 24 hours\r\n        break;\r\n      default:\r\n        setDateRange((prev) => null);\r\n        return null;\r\n    }\r\n  \r\n    // Return Unix timestamp (in seconds, not milliseconds)\r\n    const unixTimestamp = Math.floor(pastDate.getTime());\r\n    setDateRange((prev) => unixTimestamp);\r\n  \r\n    // return unixTimestamp;\r\n  };\r\n\r\n  const calculateDuration = (start, end) => {\r\n    if (!start || !end) {\r\n      return \"N/A\";\r\n    } else {\r\n      const durationInMinutes = Math.floor((new Date(end) - new Date(start)) / 60000);\r\n      return `${durationInMinutes} min`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-5\">\r\n      {/* Header and Filters */}\r\n      <div className=\"flex flex-col md:flex-row justify-between items-center mb-4\">\r\n        <div>\r\n          <h2 className=\"text-xl font-semibold\">Remediation Execution Records</h2>\r\n          <p>View the execution history of remediation actions.</p>\r\n        </div>\r\n        <div className=\"flex flex-col md:flex-row gap-4 mt-4 md:mt-0\">\r\n        <DateRange\r\n                  range={(date) => {\r\n                    getFormattedTime(date)}}\r\n                />\r\n          <select\r\n            className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px] focus:outline-none block p-1\"\r\n            id=\"remediation-filter\"\r\n            onChange={handleServiceFilterChange}\r\n          >\r\n            <option value=\"\">Filter by Service Name</option>\r\n            <option value=\"apache2\">Apache2</option>\r\n            <option value=\"OneAgent\">OneAgent</option>\r\n            <option value=\"MySQL\">MySQL</option>\r\n          </select>\r\n          <select\r\n           className=\"bg-gray-50 border border-gray-300 text-gray-900 mb-2 text-sm w-[150px] focus:outline-none block p-1\"\r\n            id=\"status-filter\"\r\n            onChange={handleStatusFilterChange}\r\n            value={selectedStatus || ''}\r\n          >\r\n            <option value=\"\">Filter by Status</option>\r\n            <option value=\"OPEN\">Open</option>\r\n            <option value=\"CLOSED\">Closed</option>\r\n            <option value=\"IN_PROGRESS\">In Progress</option>\r\n            <option value=\"FAILED\">Failed</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table / Cards */}\r\n      <div className=\"px-5 py-2 w-full h-[calc(100vh-190px)] overflow-auto\">\r\n        <div className=\"hidden md:block\">\r\n         {filteredData.length !== 0 ? (  <table className=\"w-full bg-white shadow-sm text-sm text-left\">\r\n            <thead className=\"bg-gray-200 text-xs\">\r\n              <tr>\r\n                <th className=\"p-3 text-center\">DisplayID</th>\r\n                <th className=\"p-3 text-center\">Problem Title</th>\r\n                {/* <th className=\"p-3 text-center\">Sub Problem Title</th> */}\r\n                <th className=\"p-3 text-center\">Problem Impact</th>\r\n                <th className=\"p-3 text-center\">Problem Severity</th>\r\n                <th className=\"p-3 text-center\">Status</th>\r\n                <th className=\"p-3 text-center\">Service Name</th>\r\n                <th className=\"p-3 text-center\">Actual Downtime</th>\r\n                <th className=\"p-3 text-center\">Action Type</th>\r\n                {/* <th className=\"p-3 text-center\">Comment</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredData?.map((item, index) => (\r\n                <tr\r\n                  className=\"hover:bg-gray-50\"\r\n                  key={index}\r\n                  onClick={() =>\r\n                    navigate(`/${item.pid}/${item.executedProblemId}/${item.id}`)\r\n                  }\r\n                >\r\n                  <td className=\"p-2 text-center\">{item.displayId}</td>\r\n                  <td className=\"p-2 text-start truncate max-w-60\">{item.problemTitle}</td>\r\n                  {/* <td className=\"p-2 text-center truncate\">{item.subProblemTitle || \"N/A\"}</td> */}\r\n                  <td className=\"p-2 text-center\">{item.problemImpact}</td>\r\n                  <td className=\"p-2 text-center\">{item.problemSeverity}</td>\r\n                  <td className=\"p-2 text-center\">{item.status}</td>\r\n                  <td className=\"p-2 text-start truncate max-w-60\">{item.serviceName}</td>\r\n                  <td className=\"p-2 text-center\">{calculateDuration(item.problemDetectedAt, item.problemEndAt)}</td>\r\n                  <td className=\"p-2 text-center\">{item.actionType.toUpperCase()}</td>\r\n                  {/* <td className=\"p-2 text-center truncate\">{item.comments}</td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>): (<p className=\"flex justify-center p-5 font-semibold\">No Avilable Problems.</p>)}\r\n        </div>\r\n\r\n        <div className=\"md:hidden space-y-4\">\r\n          {filteredData?.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"p-4 bg-white  shadow-md border hover:bg-gray-50\"\r\n              onClick={() => navigate(`/${item.pid}/${item.executedProblemId}/${item.id}`)}\r\n            >\r\n              <p className=\"text-sm text-gray-600\">ID: {item.displayId}</p>\r\n              <p className=\"text-sm font-semibold text-gray-800 truncate\">Title: {item.problemTitle}</p>\r\n              <p className=\"text-sm text-gray-600 truncate\">Sub Title: {item.subProblemTitle || \"N/A\"}</p>\r\n              <p className=\"text-sm text-gray-600\">Impact: {item.problemImpact}</p>\r\n              <p className=\"text-sm text-gray-600\">Severity: {item.problemSeverity}</p>\r\n              <p className=\"text-sm text-gray-600 truncate\">Service: {item.serviceName}</p>\r\n              <p className=\"text-sm text-gray-600\">Status: {item.status}</p>\r\n              <p className=\"text-sm text-gray-600\">Downtime: {calculateDuration(item.problemDetectedAt, item.problemEndAt)} min</p>\r\n              <p className=\"text-sm text-gray-600\">Action: {item.actionType.toUpperCase()}</p>\r\n              <p className=\"text-sm text-gray-600 truncate\">Comment: {item.comments}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExecutionHistory;\r\n"],"names":["_ref","range","selectedRange","setSelectedRange","useState","_jsxs","id","value","onChange","e","target","className","children","_jsx","disabled","map","item","index","ExecutionHistory","isLoading","error","data","apiData","getData","useFetch_GET","setData","filteredData","setFilteredData","selectedStatus","setSelectedStatus","selectedService","setSelectedService","dateRange","setDateRange","navigate","useNavigate","useParams","useEffect","filter","status","prev","serviceNamem","console","log","Date","fitterDataWithDateRange","convertToIST","problemDetectedAt","detectedTime","calculateDuration","start","end","durationInMinutes","Math","floor","concat","DateRange","date","now","pastDate","getTime","unixTimestamp","getFormattedTime","event","length","onClick","pid","executedProblemId","displayId","problemTitle","problemImpact","problemSeverity","serviceName","problemEndAt","actionType","toUpperCase","subProblemTitle","comments"],"sourceRoot":""}